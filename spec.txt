expr                    //= Expression      --  * Until depth=0 OR whitespace OR END_TAG
tagname                 //= Tagname         --  /^[a-zA-Z]+[a-zA-Z0-9]*$/
id                      //= Id              --  /^[\$_a-zA-Z]+[\$_a-zA-Z0-9]*$/
selector                //= Selector        --  /^(<tagname>)*(#<id>){0,1}(\.<id>)*$/
<:>                     //= Group           --  $$parent.group(($$parent)=>{...})
<:selector [expr]>      //= Element         --  $$parent.element([$1='div'], [$2=''], [$3=[]], [$4={}], ($$parent)=>{...})
<|expr>                 //= Text            --  $$parent.text([$1=''])
<\expr>                 //= Comment         --  $$parent.comment([$1=''])
<&expr>                 //= Reference       --  $$parent.reference($1)
@                       //= This            --  this
@id                     //= ThisKey         --  this.$1
<@id[:expr]>            //= Class           --  class $1 [extends $2] {...}
<#expr [expr]>          //= Construct       --  $$parent.construct($1, $2, ($$parent)=>{...})
<?([id...])>            //= Function        --  ([$1...]) => {return $$.group(($$parent)=>{...})}
<?id([id...])>          //= MemberFunction  --  $1 ([$2...]) {return $$.group(($$parent)=>{...})}
<<*...>                 //= Declare         --  $$.*(...)
<<<*...>                //= Returns         --  return $$.*(...)
